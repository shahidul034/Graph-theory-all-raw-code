#include<iostream>
#include<vector>
#include<stdio.h>
#include<map>
#define infinity  345456456
typedef long long int ll;//1507034
using namespace std;
map<int,int>dis;
vector<pair<int,pair<int,int>>>vec;
void Bellmanford(int node,int source)
{
    for(int i=1; i<=node; i++)
    {
        dis[i]=infinity;
    }
    dis[source]=0;
    for(int i=1; i<=node-1; i++)
    {
    	vector<pair<int,pair<int,int>>>::iterator it=vec.begin();
        for( ;it!=vec.end()  ;it++  )
        {
        	int u=(it->second).first;
        	int v=(it->second).second;
            if((dis[u]+(it->first))<dis[v])
            {
                dis[v]=dis[u]+(it->first);

            }
        }
    }
    int flag=0;
    vector<pair<int,pair<int,int>>>::iterator it=vec.begin();
      for( ;it!=vec.end()  ;it++  )
        {
        	int u=(it->second).first;
        	int v=(it->second).second;
            if((dis[u]+(it->first))<dis[v])
            {
            	flag=1;
                dis[v]=dis[u]+(it->first);

            }
        }
        if(!flag)cout<<"NO cycle\n";
        else cout<<"Cycle\n";

}

int main()
{
    freopen("in.txt","r",stdin);
	int node ,edges;
	cin>>node>>edges;
	for(int i=0;i<edges;i++){
		int a,b,c;
		cin>>a>>b>>c;
		vec.push_back({c,{a,b}});
	}
Bellmanford(node,1);
for(int i=1;i<=node;i++)cout<<i<<": "<<dis[i]<<"\n";


}
